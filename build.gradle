plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
  	id "com.matthewprenger.cursegradle" version "1.4.0"
  	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = modMinecraftVersion + "-" +modVersion +"-"+modLoader
group = modGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = modFilename

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
println('Mod Name: ' + modFilename + ', Mod Version: ' + modVersion + ', Minecraft Version: ' + modMinecraftVersion + ', '+modLoader+' Version: ' + modLoaderVersion)

loom {
    accessWidenerPath = file("src/main/resources/"+modId+".accesswidener")
}

repositories {
	maven {url = "https://repo.spongepowered.org/maven"} // mixin
	maven {url "https://www.cursemaven.com"} //cursemaven
	maven {url "https://modmaven.dev/" } //UnionLib
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        name = "ARRP"
        url = uri("https://storage.googleapis.com/devan-maven/")
        content {
            includeGroup "net.devtech"
        }
    }
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
    maven {url 'https://maven.blamejared.com/'}
    maven {url 'https://jitpack.io'}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.modMinecraftVersion}"
	mappings loom.layered() {
  		officialMojangMappings()
  		parchment("org.parchmentmc.data:"+mappingsChannel+"-"+mappingsVersion+"@zip")
	}
	modImplementation "com.stereowalker.unionlib:UnionLib:"+modMinecraftVersion+"-"+unionLibVersion+"-"+modLoader+""
	modImplementation "net.minecraftforge:forgeconfigapiport-fabric:4.2.9"
	modImplementation "net.fabricmc:fabric-loader:${project.modFabricLoaderVersion}"
	modImplementation "net.fabricmc:fabric-language-kotlin:1.9.0+kotlin.1.8.0"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.0.1"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.1"
    modImplementation "net.devtech:arrp:0.5.5"
	modImplementation "curse.maven:carrier-409184:3873675"
	implementation "com.github.LlamaLad7:MixinExtras:0.1.1"
	modImplementation "tschipp.carryon:carryon-fabric-1.19.2:2.0.4.6"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.modLoaderVersion}"
	implementation 'com.electronwill.night-config:core:3.6.3'
	implementation 'com.electronwill.night-config:toml:3.6.3'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

curseforge {
    project {
    	id = modCurseId
		apiKey = "$System.env.CURSEFORGEKEY"
		changelog = file('changelog.md')
		releaseType = 'release'
		addGameVersion(modMinecraftVersion)
        addGameVersion("${project.modLoader}")
        relations {
        	requiredDependency 'unionlib'
        	optionalDependency 'carrier'
        	optionalDependency 'carry-on'
        }
		mainArtifact(file("${project.buildDir}/libs/"+modFilename+"-${project.version}.jar")) {
			displayName = modFilename+"-${project.version}"
		}
		afterEvaluate {
			uploadTask.dependsOn(remapJar)
		}
	}
	options {
    	debug = false // defaults to false
    	forgeGradleIntegration = false
  	}	
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = modId
    versionNumber = "${project.version}"
    versionType = "release"
    uploadFile = jar
    gameVersions = [modMinecraftVersion]
    loaders = ["${project.modLoader}".toLowerCase()]
	changelog = file('changelog.md').text
    dependencies {
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        //required.project "fabric-api" // Creates a new required dependency on Fabric API
    }
}

publishing {
	tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
			artifact project.file("${project.buildDir}/libs/"+modFilename+"-${project.version}.jar")
        
        	groupId = project.group
			artifactId = project.archivesBaseName
			version = project.version
        }
    }
    repositories {
        maven {
            name = "modmaven"
			credentials {
				username "$System.env.ARTIFACTORYUSER"
				password "$System.env.ARTIFACTORYPASS"
			}
			url = "https://modmaven.dev/artifactory/local-releases/"
        }
    }
}
